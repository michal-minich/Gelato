parse validate not recoverable erros
remark undefined symbols
prepare functions on firs call
typed builtin funtions
dynamic typing
static typing

parse dot op apply
interpret dot op apply


PARSER -----------------------------
parse array / brace op apply
coma separated statements and struct members
new line separated fn args and params
comments
operators
parse declaration type
consider including trailing white after last token in it


VALIDATOR -----------------------------
syntax
intendation level
unknown identifiers
double identifiers


INTERPRETER -----------------------------
dynamic typing
forbid using fn as struct
primitive operations on numbers
builtins with qualified name
array object (empty, first, rest)
    variable length fn params
    text is array
project file
multi file support
var / mutable variables
ref
exceptions /, scope guars
contracts
builtin for stack trace
builtin in for env
user overridable struct functions - construct, destruct, clone, ...
first-class types
first base library
cast
arrays / mem allocation
operators priority


TOKENIZER -----------------------------
cancel unclosed text after escape on first line
cancel unclosed comment on first line
decimal numbers
hex numbers
hex decimals
hex escapes
nested comment
documentation comments


FORMATTER -----------------------------
configuration profiles
fixes for validation formatting remarks


INTERACTIVE -----------------------------
first version