struct assignment (identifier even) is var implicitly ?
check  chained assignments - are they var ?
disallow chained assignments ?
mutable variables - allow only var as mutable
remark multiply defined 
import names form scope to scope (also selective) - import std (id, second), module2
import all modules by default
public attribute

op dot priority
goto from and inside if/then/else

TOKENIZER -----------------------------
  hex decimals #1.a (not #1.#a)
  hex/dec decimals with exponents
  text hex escapes
  text unicode escapes

PARSER -----------------------------
  cancel unclosed text on first line
  when code text ends with single quote, is it char/text/error ?
  cleanup and reliability fixes
  generate remarks
  decimal numbers
  documentation comments
  nested comment
  custom brace op apply

VALIDATOR -----------------------------
  syntax
  indentation level

PREPARER -----------------------------
! call functions as members of first parameter
  operators priority
  prepare functions on firs call
  tail call

TYPE INFERENCE / CHECK -----------------------------
! infer identifier by usage in fn (not only by def)
! infer identifier by usage as fn arg
  report type errors
  report declared vs. inferred type discrepancies
  infer definite assignment
  infer value origin
  infer value destination
  infer possible values for variable
  infer on fn apply / op apply: throws, ...
  infer on fn pure, deterministic throws, modify global, ..

INTERPRETER -----------------------------
! built-ins with qualified name (also overridable)
! variable length fn params
! array operations (empty, first, rest)
! text is array
! types
! built-ins - TypeOf
! type parameters
! overloaded functions
! overloaded built-in functions
! user overridable struct functions - construct, destruct, clone, ...
! ref
! throw
! try catch
  built-in for stack trace
  built-in in for env
  dynamic and static typing versions
  contracts
  finally / scope guars
  anonymous scope ?

FORMATTER -----------------------------
  configuration profiles

AUTOFIXER -----------------------------
  formatting / syntax

CMD / INTERACTIVE -----------------------------
  project file
  interactive - first version

function:
  pure    = mempure + dont do io / call external functions
  mempure = determp + dont modify any vairable outside funciton
  determ  = return value depends only on parameters
  contant = return value is constant

fn paremeter:
  (un)used    = is used in funciton
  functional  = is used to compute result

expression:
  constant = literal
  dead





