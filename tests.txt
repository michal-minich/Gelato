"\0"		""
"\0"		" "

"123"		"123"
"1234"		"1_234"
--"3.14"		"3.14"

" "			"" ""
"abc"		""abc""
"""			""\"""
"'"			""'""
"\n"		""\n""
"\r"		""\r""
"\t"		""\t""
"\r\n"		""\r\n""
"\n\r"		""\n\r""
"\n\r\n"	""\n\r\n""
"\"			""\\""
"\\"		""\\\\""

" "			"' '"
"a"			"'a'"
"'"			"'\''"
"""			"'"'"
"\n"		"'\n'"
"\r"		"'\r'"
"\t"		"'\t'"

"1"			"a = 1"
"1"			"abc = 1"
"1"			"abc123 = 1"
"1"			"abc_123 = 1"
"1"			"abc__123 = 1"
"1"			"a1 = 1"
"1"			"_a1 = 1"
"1"			"_a_1 = 1"
"1"			"_a_1_ = 1"

"1"			"(1)"
"1"			"(a = (1))"
"1"			"((a = ((1))))"
"1"			"(fn () { (1) }())"
"1"			"(fn (a) { (a) }(1))"

"ValueFn"	"fn () { }"
"ValueFn"	"fn(){fn(){}}"
"1"			"fn () { 1 } ()"
"1"			"fn (a) { a }(1)"

"2"			"a = b = 2"
"3"			"a = b = c = 3"
"4"			"a = b = c = d = 4"
"44"		"(a = (b = (c = (d = (44)))))"

--"1"			" start = 1 "						| start = 1 | start |1 |
"\0"		"start = fn () { }"
"1"			"start = fn () { 1 }"
"1"			"start = fn () { return 1 }"
"1"			"start = fn () { a = 1 }"
"\0"		"start = fn () { a = 1, a }"
"1"			"start = fn () { a = 1, return a }"
"\0"		"start = fn () { a = 1, b = 2 }"

"1"			"a = 1"
"1"			"a = 1, start = fn () { a }"
"1"			"a = 1, start = fn () { return a }"
"\0"		"a = 1, start = fn () { }"

@"id = fn (a) { a }, "
"1"			", start = fn () { id(1) }"
"1"			", start = fn () { id(id(1)) }"
"1"			", start = fn () { id(id)(1) }"
"1"			", start = fn () { id(id(id))(1) }"

"1"			"first  = fn (a, b) { a }, start = fn () { first (1, 2) }"

@"second = fn (a, b) { b }, "
"2"			"start = fn () { second(1, 2) }"
"3"			"start = fn () { second(1, second(2, 3)) }"
"3"			"start = fn () { second(1, second)(2 ,3) }"

"2"			"if 1 then 2 else 3 end"
"3"			"if 0 then 2 else 3 end"
"22"		"if 1 then 2, return 22 else 3, return 33 end"
"33"		"if 0 then 2, return 22 else 3, return 33 end"

@"id = fn (a) { a }, "
"2"			"start = fn () { if id(1) then id(2) else id(3) end }"
"3"			"start = fn () { if id(0) then id(2) else id(3) end }"

"1"			"start = fn () { label a, return 1, goto a,  return 2 }"
"2"			"start = fn () { goto a,  return 1, label a, return 2 }"
"\0"		"start = fn () { goto a,  return 1, label a }"

@"x = fn (a = 1) { a }, "
"1"			"start = fn () { x() }"
"2"			"start = fn () { x(2) }"

@"x = fn (a = 1) { y = fn () { a } }, "
"1"			"start = fn () { x()() }"
"2"			"start = fn () { x(2)() }"

@"x = fn (a = 1) { y = fn (a) { a } }, "
"3"			"start = fn () { x()(3) }"
"4"			"start = fn () { x(2)(4) }"
"3"			"start = fn () { y = x(), return y(3) }"
"4"			"start = fn () { y = x(2), return y(4) }"

@"x = fn () { return id }, id = fn (a) { a }, "
"3"			"start = fn () { x()(3) }"
"4"			"start = fn () { x()(4) }"
"3"			"start = fn () { y = x(), return y(3) }"
"4"			"start = fn () { y = x(), return y(4) }"

"ValueStruct"	"struct{}"
"ValueStruct"	"struct { }"
"ValueStruct"	"struct {x}"
"ValueStruct"	"struct { x }"
"ValueStruct"	"struct { x, y }"
"ValueStruct"	"struct { x, y, struct { z } }"
"ValueStruct"	"Point = struct { x, y }"
"ValueStruct"	"Point = struct { x = 1, y = 2 }"

@"Point = struct { x = 1, y = 2, z = struct { x = 3 } () }, "
"ExpScope"	"start = fn () { Point() }"
"2"			"start = fn () { Point().y }"
"3"			"start = fn () { Point().z.x }"

"1"			"struct { x = 1 }().x"
"1"			"fn (a) { struct { x = a }() }(1)  .x"
"1"			"fn (a) { struct { x = a }   }(1)().x"

@"cons = fn (h, t) { struct { head = h, tail = t } () }, "
"1"			"start = fn () { c = cons(1, 2), return c  .  head }"
"2"			"start = fn () { c = cons(1, 2), return c.tail }"
--"2"			"start = fn () { c = cons(1, cons(2, 3)), return c.tail.head }"
--"3"			"start = fn () { c = cons(1, cons(2, 3)), return c.tail.tail }"
--"2"			"start = fn () { t = cons(2, 3), c = cons(1, t), return c.tail.head }"
--"3"			"start = fn () { t = cons(2, 3), c = cons(1, t), return c.tail.tail }"
"2"			"start = fn () { c = cons(1, cons(2, 3)), c2 = c.tail, return c2.head }"
"3"			"start = fn () { c = cons(1, cons(2, 3)), c2 = c.tail, return c2.tail }"
--"2"			"start = fn () { cons(1, cons(2, 3)).tail.head }"
--"3"			"start = fn () { cons(1, cons(2, 3)).tail.tail }"
"1"			"start = fn () { cons(1, cons(2, 3).tail).head }"
"3"			"start = fn () { cons(1, cons(2, 3).tail).tail }"
--"2"			"c2 = cons(2, 3), start = fn () { cons(1, c2).tail.head }"
--"3"			"c2 = cons(2, 3), start = fn () { cons(1, c2).tail.tail }"

"3"			"1 + 2"
"13"		"10 + 1 + 2"
"13"		"10 + (1 + 2)"
"13"		"(10 + 1) + 2"
"13"		"(10 + (1) + 2)"
"13"		"a = 10, start = fn () { a + 1 + 2 }"

"1"			"1 == 1"
"0"			"1 == 2"
"1"			"'a' == 'a'"
"0"			"'a' == 'b'"

"1"			"1 === 1"
"0"			"1 === 2"
"1"			"1 == '1'"
"1"			"1 == "1""
"0"			"1 === '2'"
"0"			"1 === "2""
"0"			"1 === '1'"
"0"			"1 === "1""

@"s = struct { x = 2 } (), start = fn () { "
"1"			"s.x == 2 }"
"1"			"(s.x + 2) == 4 }"
"1"			"((s.x + 1) + 1) == (s.x + s.x) }"
"1"			"(s.x + 1 + 1) == (s.x + s.x) }"
"1"			"(s.x + (1 + 1)) == (s.x + s.x) }"