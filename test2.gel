(1).2
3.(4)
(5).(6)

1.(m)
(1).m
(1).(m)

(#1).2
#3.(4)
(#5).(6)

(#1).#2
#3.(#4)
(#5).(#6)


if a then b else c end
label d
goto e
var f
fn () { return 1 }


start = fn ()
{
	label again
	print("enter number")
	ln = readln()
	n = toNum(ln)
	if n === 5 then
		print ("ok")
	else
		print (n, " is not 5")
		goto again
	end
}

start = fn ()
{
	a = 1
	label again
	n = inc(a)
	if n === 5 then
		print ("ok")
	else
		print (n, " is not 5")
		goto again
	end
}

start = fn ()
{
	adder = fn (a) { fn (b) { a + b } }
	a1 = adder (10)
	print (a1(1))
}

start = fn ()
{
	print (b)
	a = 1
	print (a)
	a = a + 10
	print (a)
	X = struct { y = a = a + 100, z = a }
	x = X()
	--if 1 then a = a + 3 end
	f = fn () { a = a + 5, print (a) }
	print (X().y, ",", X().y, ",", x.y, ",", x.y)
	print (X().z, ",", X().z, ",", x.z, ",", x.z)
	print (a)
	f()
	print (a)
	--f = fn (a = 1) { a = a + 5 }
	--print (a)
	--f()
	--print (a)
	print (a = a + 1_000, ",", a = a + 10_000)
	print (a)
}
b = 33