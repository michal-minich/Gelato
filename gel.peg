Gel:
File   <- Spacing Declrs Spacing EOI
   Declrs <- (Declr / Comment) (:LineSep Spacing (Declr / Comment))*

LineSep <- EOL+ / :","
Comment <- :"--" ~(!EOL .)*

Declr  <- (Ident Spacing :"=" Spacing Exp :Blank* Comment?)
        / (Ident Spacing ":" Spacing Exp (Spacing :"=" Spacing Exp)? :Blank* Comment?)

Exp    <- (Char/ Text / Number / Struct / Fn / FnApply / Ident)
     / ("(" (Char/ Text / Number / Struct / Fn / FnApply / Ident) ")") Comment?
    Char    <- :"'" ("'" / ~(!"'" .)+) :"'"
    Text    <- :"\"" ~(!"\"" .)* :"\""
    Number  <~ "-"? Spacing Integer (Spacing "." Spacing Integer)?
        Integer <- :"_"* Digit (:"_"+ / Digit)*
    Struct  <- :"struct" Spacing :"{" Spacing Declrs Spacing :"}"
    Fn      <- "fn" Spacing :"(" Spacing FnParams? Spacing :")" Spacing :"{" Spacing FnBody* Spacing :"}"
        FnParams <- Declrs
        FnBody <- FnItem (:LineSep Spacing FnItem)*
            FnItem <- If / Label / Goto / Return / Declr / Exp
            If     <- :"if" Spacing Exp Spacing :"then" Spacing FnBody Spacing (:"else" Spacing FnBody Spacing)? :"end"
            Label  <- :"label" :Blank* Ident
            Goto   <- :"goto" :Blank* Ident
            Return <- :"return" :Blank* Exp
    FnApply <- !Key Ident Spacing :"(" Spacing FnArgs? Spacing :")"
        FnArgs <- (Exp / Comment) (:LineSep Spacing (Exp / Comment))*
    Ident   <~ !Key ^"_"* (letter / Letter)+ Alphanum*
    Key     <- "fn" / "if" / "label" / "goto" / "return" / "struct"
